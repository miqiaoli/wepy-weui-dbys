<template>
<view class="page">
  <view style="text-align: center;">
    <navigator url="./add-address" style="height: 35px;">
      <image class="add-icon" src="/images/icon/add.png" />
    </navigator>
  </view>
  <view class="list">
    <block wx:for="{{list}}" wx:key="id" wx:for-index="index" wx:for-item="item">
      <view class="item weui-flex">
        <!-- <view class="img"></view> -->
        <view @tap="toDes" data-id="{{item.id}}" data-index="{{index}}" class="rflex weui-flex weui-flex__item">
          <view class="title">{{item.name}} <text style="color: #999999;font-weight: 400;">{{item.phone}}</text></view>
          <view class="address">{{item.address}}</view>
        </view>
        <view @tap="toDel" data-id="{{item.id}}" class="" style="width:25px; height:25px;">
          <image class="" style="width:100%; height:100%;" src="/images/icon/del.png" />
        </view>
      </view>
    </block>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import events from '../../utils/event';
import http from '../../utils/Http';
export default class ShopAddress extends wepy.page {
  config = {
    navigationBarTitleText: '收货地址',
  }
  data = {
    list: [],
    choose: false,
    user_phone: '',
  }
  methods = {
    toDes(e) {
      const index = e.currentTarget.dataset.index
      if (this.choose) {
        // 返回地址
        events.emitEvents('getBackAddr', this.list[index])
        wx.navigateBack()
      } else {
        const id = e.currentTarget.dataset.id
        wx.navigateTo({
          url: `./add-address?id=${id}`
        })
      }
    },
    async toDel(e) {
      const id = e.currentTarget.dataset.id
      const resModal = await wepy.showModal({
        title: '提示',
        content: '确定删除?',
      })
      if (resModal.confirm) {
        const res = await http.post(__getApi._delAddr, {
          id: id,
        })
        if (res.meta.success) {
          this.getList()
        }
      }
    }
  }
  onLoad(e) {
    if (e.type) {
      this.choose = true
    }
    this.user = this.$parent.globalData.user_info ? JSON.parse(this.$parent.globalData.user_info) : null
    this.token_access = this.$parent.globalData.token_access || ''
  }
  async onShow() {
    this.user_phone = this.$parent.globalData.user_phone ? this.$parent.globalData.user_phone : ''
    if (!this.$parent.globalData.user_phone) {
      const resModal = await wepy.showModal({
        title: '提示',
        content: '无登录信息，请登录',
        showCancel: false
      })
      if (resModal.confirm) {
        wepy.redirectTo({
          url: '/pages/user/login'
        })
      }
    } else {
      this.getList()
    }
  }
  async getList() {
    const res = await http.get(__getApi._getAddrList, {
      username: this.user_phone,
    })
    if (res.meta.success) {
      this.list = res.data;
      this.$apply();
    }
  }
}
</script>

<style lang="less" scoped>
.add-icon {
  margin-top: 10px;
  width: 25px;
  height: 25px;
}

.list {
  margin: 10px 16px;

  .item {
    align-items: center;
    margin-bottom: 10px;
    padding: 18px 10px;
    background: white;
    border-radius: 13px;

    .img {
      width: 48px;
      min-width: 48px;
      height: 48px;
      background: #000;
      border-radius: 50%;
    }

    .rflex {
      margin-left: 10px;
      flex-direction: column;
      justify-content: space-between;

      .title {
        font-size: 16px;
        color: #333;
        font-weight: 500;
      }

      .address {
        color: #333333;
        ;
        font-size: 14px;
      }
    }
  }
}
</style>
