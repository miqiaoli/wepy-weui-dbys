<template>
<view class="page bg__white">
  <view class="item weui-flex"><text style="color:#0077DB;">*</text>
    <input class="weui-flex__item" bindinput="input('username')" value="{{username}}" placeholder="收货人" />
  </view>
  <view class="item weui-flex"><text style="color:#0077DB;">*</text>
    <input class="weui-flex__item" bindinput="input('phone')" value="{{phone}}" placeholder="手机号码" />
  </view>
  <view class="weui-flex">
    <view class="item weui-flex__item" bindtap="riseModel"><text style="color:#0077DB;">*</text>{{chooseCitys ? chooseCitys : '所在地区'}}</view>
    <view class="weui-cell__ft weui-cell__ft_in-access"></view>
  </view>
  <view class="item weui-flex"><text style="color:#0077DB;">*</text>
    <textarea bindinput="input('addr_des')" value="{{addr_des}}" class="textarea" maxlength="-1" placeholder-style="font-size: 14px; color: #999999;" placeholder="详细地址：如道路、门牌号、小区、楼栋号、单元室等" rows="8"></textarea>
  </view>
  <view class="item">
    <button class="weui-btn" type="primary" @tap="newAddr">确定</button>
  </view>
  <view wx:if="{{!isCity}}" class="citys" catchtouchmove='preventTouchMove'>
    <view class="inner_box">
      <view class="header_box">
        <view class="item l" data-act="cancel" data-mold="city" bindtap="chooseFalse">取消</view>
        <view class="item c">请选择</view>
        <view class="item r" data-act="confirm" data-mold="city" bindtap="chooseTrue">确定</view>
      </view>
      <picker-view class="picker_box" indicator-class="selected" value="{{cityValue}}" bindchange="cityChange">
        <picker-view-column>
          <view wx:for="{{provices}}" wx:key='*this'>{{item.label}}</view>
        </picker-view-column>
        <picker-view-column>
          <view wx:for="{{urban}}" wx:key='*this'>{{item.label}}</view>
        </picker-view-column>
        <picker-view-column>
          <view wx:for="{{area}}" wx:key='*this'>{{item.label}}</view>
        </picker-view-column>
      </picker-view>
    </view>
    <view class="layer" catchtouchstart="removeLayer" data-type='isCity'></view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import http from '../../utils/Http'
export default class ShopAddAddress extends wepy.page {
  config = {
    navigationBarTitleText: '收货地址',
  }
  data = {
    id: '',
    username: '',
    phone: '',
    addr_des: '',
    isCity: true,
    allCity: [],
    cityValue: [0, 0, 0],
    provices: [],
    urban: [],
    area: [],
    cityKey: [],
    cityVal: [],
    chooseCitys: '',
  }
  methods = {
    async newAddr() {
      if (!this.username || !this.phone || !this.addr_des || !this.chooseCitys) {
        wx.showToast({
          title: '请将信息填写完整',
          icon: 'none',
          duration: 2000
        })
        return
      }
      const res = await http.post(__getApi._newAddr, {
        id: this.id,
        username: '18211001672',
        address: this.addr_des,
        default: 0,
        name: this.username,
        phone: this.phone,
        sheng: `${this.cityKey[0]}_${this.cityVal[0]}`,
        shi: `${this.cityKey[1]}_${this.cityVal[1]}`,
        qu: `${this.cityKey[2]}_${this.cityVal[2]}`,
      })
      if (res.meta.success) {
        wx.navigateBack()
      }
    },
    input(key, e) {
      this[key] = e.detail.value
    },
    // 城市级联数据改变处理
    cityChange(e) {
      let val = e.detail.value
      var t = this.cityValue // 城市数据坐标 0 0 0
      const allCity = this.allCity
      // 省级变化
      if (val[0] !== t[0]) {
        let urban = []
        // 市处理
        val[val[0], 0, 0]
        this.urban = allCity[val[0]].children
        this.area = allCity[val[0]].children[0].children
        this.cityValue = [e.detail.value[0], 0, 0]
        this.$apply()
      }
      // 市变化
      if (val[1] !== t[1]) {
        let area = []
        val[val[0], val[1], 0]
        allCity[val[0]].children[val[1]].children.forEach((val, index) => {
          area.push({
            'value': val.value,
            'label': val.label
          })
        })
        this.area = area
        this.cityValue = [e.detail.value[0], e.detail.value[1], 0]
        this.$apply()
      }
      // 区变化
      if (val[2] !== t[2]) {
        this.cityValue = e.detail.value
      }
    },
    preventTouchMove(e) {},
    // 唤起城市选择
    riseModel() {
      this.isCity = false
    },
    chooseFalse() {
      this.isCity = true
    },
    // 确认选择 处理
    chooseTrue() {
      this.isCity = true
      this.chooseCitys = this.provices[this.cityValue[0]].label + '-' + this.urban[this.cityValue[1]].label + '-' + this.area[this.cityValue[2]].label
      this.cityVal = [this.provices[this.cityValue[0]].label, this.urban[this.cityValue[1]].label, this.area[this.cityValue[2]].label]
      this.cityKey = [this.provices[this.cityValue[0]].value, this.urban[this.cityValue[1]].value, this.area[this.cityValue[2]].value]
    },
    removeLayer(e) {
      const type = e.currentTarget.dataset.type
      this[type] = !this[type]
    },
  }
  onLoad(e) {
    this.user = this.$parent.globalData.user_info ? JSON.parse(this.$parent.globalData.user_info) : null
    this.token_access = this.$parent.globalData.token_access || ''
    this.getCities()
    if (e.id) {
      this.id = e.id
      this.getAddrDes(e.id)
    }
  }
  async getAddrDes(id) {
    const res = await http.get(__getApi._getAddrDes, {
      id: id
    })
    if (res.meta.success) {
      this.username = res.data.name
      this.phone = res.data.phone
      this.addr_des = res.data.address
      this.cityKey = [res.data.sheng.split('_')[0], res.data.shi.split('_')[0], res.data.qu.split('_')[0]]
      this.cityVal = [res.data.sheng.split('_')[1], res.data.shi.split('_')[1], res.data.qu.split('_')[1]]
      this.chooseCitys = res.data.sheng.split('_')[1] + '-' + res.data.shi.split('_')[1] + '-' + res.data.qu.split('_')[1]
      this.$apply()
    }
  }
  async getCities() {
    const res = await http.get(__getApi._getCities)
    this.allCity = res.data
    this.allCity.forEach((val, index) => {
      this.provices.push({
        'value': val.value,
        'label': val.label
      })
    })
    this.allCity[0].children.forEach((val, index) => {
      this.urban.push({
        'value': val.value,
        'label': val.label
      })
    })
    this.allCity[0].children[0].children.forEach((val, index) => {
      this.area.push({
        'value': val.value,
        'label': val.label
      })
    })
    this.$apply()
  }
}
</script>

<style lang="less" scoped>
.item {
  font-size: 14px;
  border-bottom: 1px solid #EFEFEF;
  padding: 8px 0;
}

.textarea {
  width: 100%;
  height: 80px;
}

.page {
  padding: 16px;
}

/*选择器*/
.citys {
  width: 100%;
  position: fixed;
  bottom: 0;
  left: 0;
  z-index: 999999;
}

.citys .inner_box {
  position: relative;
  z-index: 999999;
}

.citys .header_box {
  padding: 25rpx 0;
  overflow: hidden;
  box-sizing: border-box;
  background: #FBF9FE;
}

.citys .header_box .item {
  float: left;
  font-size: 34rpx;
  color: #586C94;
  box-sizing: border-box;
}

.citys .header_box .l {
  width: 25%;
  padding-left: 25rpx;
}

.citys .header_box .c {
  width: 50%;
  text-align: center;
}

.citys .header_box .r {
  width: 25%;
  text-align: right;
  padding-right: 25rpx;
}

.citys .selected {
  height: 90rpx;
}

.citys .picker_box {
  width: 100%;
  height: 485rpx;
  background: #fff;
}

.citys .picker_box picker-view-column {
  text-align: center;
}

.citys .picker_box picker-view-column view {
  line-height: 90rpx;
}

.layer {
  width: 100%;
  height: 100%;
  position: fixed;
  left: 0;
  top: 0;
  z-index: 10;
  background: rgba(0, 0, 0, 0.5);
}
</style>
