<template>
<view class="page">
  <view class="list">
    <block wx:for="{{list}}" wx:key="id" wx:for-index="index" wx:for-item="item">
      <view class="item weui-flex" style="align-items:center;">
        <icon data-index="{{index}}" @tap="choose" color="{{item.choosed ? 'red' : ''}}" type="{{item.choosed ? 'success' : 'circle'}}" size="20"></icon>
        <image class="img" src="{{item.img ? imgHost+item.img : 'https://www.otimes.com/u/cms/www/202002/141734510dho.png'}}" />
        <view class="rflex">
          <view class="title">{{item.skuname}}</view>
          <view class="weui-flex" style="justify-content: space-between;align-items: flex-end;">
            <view class="d">{{item.redeem}}积分</view>
            <view class="rc">
              <text data-index="{{index}}" @tap="reduce" style="padding: 0 10px; border-right: 1px solid #E9E9E9;">-</text>
              <text style="padding: 0 14px;">{{item.buy_number}}</text>
              <text data-index="{{index}}" @tap="add" style="padding: 0 10px; border-left: 1px solid #E9E9E9;">+</text>
            </view>
          </view>
        </view>
      </view>
    </block>
  </view>
  <view class="confirm weui-flex">
    <view @tap="allChoose" class="">全选</view>
    <view @tap="del" class="" style="margin: 0 20px;">删除</view>
    <view class="total weui-flex__item">
      合计：<text style="color:#E94300;">{{score}}积分</text>
    </view>
    <view @tap="toPay" class="btn">兑换({{num}})</view>
  </view>
</view>
</template>

<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import http from '../../utils/Http'
import events from '../../utils/event'
export default class ShopCar extends wepy.page {
  config = {
    navigationBarTitleText: '礼品车',
  }

  data = {
    imgHost: 'https://www.otimes.com/filepool',
    isIpx: false,
    token_access: '',
    user: null,
    list: [],
    score: 0,
    num: 0,
    user_phone: '',
  }

  methods = {
    choose(e) {
      // 计算 积分 暂定
      let index = e.currentTarget.dataset.index;
      if (this.list[index].choosed) {
        this.list[index].choosed = false
        this.num = this.num - 1
      } else {
        this.list[index].choosed = true
        this.num = this.num + 1
      }
      this.getTotalPrice()
      this.$apply()
    },
    allChoose() {
      // 计算 积分 暂定
      this.num = this.list.length
      let list = []
      this.list.map((item, index) => {
        list.push(Object.assign({}, item, {
          choosed: true
        }))
      })
      this.list = list
      this.getTotalPrice()
      this.$apply()
    },
    del() {
      if (this.num <= 0) {
        return
      }
      // 展示虚假删除
      let chooseList = this.list.filter(item => item.choosed == true)
      let carList = this.list.filter(item => item.choosed == false)
      this.list = carList
      this.$apply()
      let self = this
      // 循环删除
      chooseList.forEach((val, index) => {
        self.delCar(val.skuid, val.buy_number)
      })
    },
    // 增加商品数量
    reduce(e) {
      let index = e.currentTarget.dataset.index
      if (this.list[index].buy_number > 1) {
        this.carNum(this.list[index].skuid, this.list[index].buy_number - 1)
        --this.list[index].buy_number
        this.getTotalPrice()
        this.$apply()
      }
    },
    // 增加商品数量
    add(e) {
      let index = e.currentTarget.dataset.index
      this.carNum(this.list[index].skuid, this.list[index].buy_number + 1)
        ++this.list[index].buy_number
      this.getTotalPrice()
      this.$apply()
    },
    // 去支付
    toPay() {
      if (this.num <= 0) {
        return
      }
      let self = this
      wx.setNavigationBarTitle({
        title: '确认订单'
      })
      wx.navigateTo({
        url: `./pay`,
        events: {},
        success: function (res) {
          res.eventChannel.emit('acceptDataFromOpenerPage', {
            score: self.score,
            num: self.num,
            list: self.list.filter(val => val.choosed == true)
          })
        }
      })
    },
  }
  async onLoad(e) {
    this.user = this.$parent.globalData.user_info ? JSON.parse(this.$parent.globalData.user_info) : null
    this.token_access = this.$parent.globalData.token_access || ''
    this.user_phone = this.$parent.globalData.user_phone ? this.$parent.globalData.user_phone : ''
    if (!this.$parent.globalData.user_phone) {
      const resModal = await wepy.showModal({
        title: '提示',
        content: '无登录信息，请登录',
        showCancel: false
      })
      if (resModal.confirm) {
        wepy.redirectTo({
          url: '/pages/user/login'
        })
      }
    } else {
      this.getList()
    }
  }
  async getList() {
    const res = await http.get(__getApi._getShopList, {
      serverName: 'TRADE_CMS_SCORE_GIFT_CAR',
      username: this.user_phone,
      token_access: this.token_access,
    })
    if (res.meta.success) {
      if (res.data.success == '0000') {
        let list = []
        res.data.body.giftlist.map((item, index) => {
          list.push(Object.assign({}, item, {
            choosed: false
          }))
        })
        this.list = list
        this.$apply()
      } else {
        wx.showToast({
          title: res.data.msg,
          icon: 'none',
          duration: 2000
        })
      }
    }
  }
  getTotalPrice() {
    let chooseArr = this.list.filter(val => val.choosed == true)
    let getTotalPrice = 0
    chooseArr.forEach(val => {
      getTotalPrice += Number(val.buy_number) * Number(val.redeem)
    });
    this.score = getTotalPrice
  }
  delCar(skuid, buy_number) {
    const res = http.get(__getApi._getShopList, {
      serverName: 'TRADE_CMS_SCORE_GIFT_CAR_ADD',
      username: this.user_phone,
      skuid: skuid,
      buy_number: buy_number,
      operate: 1,
      token_access: this.token_access,
    })
  }
  // 商品数量增减
  carNum(skuid, buy_number) {
    http.get(__getApi._getShopList, {
      serverName: 'TRADE_CMS_SCORE_GIFT_CAR_ADD',
      username: this.user_phone,
      skuid: skuid,
      buy_number: buy_number,
      operate: 0,
      token_access: this.token_access,
    })
  }
}
</script>

<style lang="less" scoped>
.page {
  // margin-bottom: 100px;
}

.list {
  margin: 10px 16px 10px 16px;
  padding-bottom: 100px;
  .item {
    margin-bottom: 10px;
    padding: 28px 10px;
    background: white;
    border-radius: 13px;

    .choose {
      height: 16px;
      min-width: 16px;
      width: 16px;
      background: #0078DD;
      border: 1px solid #0078DD;
      border-radius: 50%;
    }

    .falseChoose {
      border: 1px solid #E9E9E9;
      background: white;
    }

    .img {
      margin-left: 10px;
      min-width: 100px;
      width: 100px;
      height: 100px;
      background: #000;
    }

    .rflex {
      // height: 100px;
      display: flex;
      margin-left: 10px;
      flex-direction: column;
      justify-content: space-between;
      flex: 1;

      .title {
        font-size: 14px;
        color: #333;
      }

      .d {
        color: #E94300;
        font-size: 18px;
        font-weight: 500;
      }

      .rc {
        line-height: 22px;
        height: 22px;
        font-size: 14px;
        color: #999999;
        border: 1px solid #E9E9E9;
        border-radius: 11px;
      }
    }
  }
}

.confirm {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: white;
  line-height: 40px;
  padding: 6px 16px 40px 16px;
  color: #999999;
  font-size: 16px;

  .total {
    color: #333333;
    font-size: 16px;
  }

  .btn {
    padding: 0 22px;
    height: 40px;
    line-height: 40px;
    font-size: 16px;
    color: #FFFFFF;
    background: linear-gradient(180deg, #FC9600 0%, #F75D00 100%);
    border-radius: 20px;
  }
}
</style>
