<template>
<form bindsubmit="formSubmit" bindreset="formReset">
  <view class="weui-toptips weui-toptips_warn" wx:if="{{tipsFlag}}">{{tipsMessage}}</view>
  <view class="weui-cells weui-cells_after-title"></view>
  <view class="weui-cells weui-cells_after-title">
    <view class="weui-cell weui-cell_select">
      <view class="weui-cell__hd weui-cell__hd_in-select-after">
        <view class="weui-label">类型</view>
      </view>
      <view class="weui-cell__bd">
        <picker bindchange="bindTypeChange" value="{{typeIndex}}" range="{{typeList}}">
          <view class="weui-select weui-select_in-select-after">{{typeList[typeIndex]}}</view>
        </picker>
      </view>
    </view>
    <view class="weui-cell weui-cell_select">
      <view class="weui-cell__hd weui-cell__hd_in-select-after">
        <view class="weui-label">品种</view>
      </view>
      <view class="weui-cell__bd">
        <picker bindchange="bindVarietyChange" value="{{varietyIndex}}" range="{{varietyList}}" range-key="{{'descrip'}}">
          <view class="weui-select weui-select_in-select-after">{{varietyList[varietyIndex].descrip}}</view>
        </picker>
      </view>
    </view>
    <!-- <navigator url="/pages/product/filter?type=1&goods_class_id={{variety}}" class="weui-cell weui-cell_access" hover-class="weui-cell_active"> -->
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">
          <view class="red-box">品名</view>
        </view>
      </view>
      <view class="weui-cell__bd">
        <!-- {{chooseProduct.name}} -->
          <input class="weui-input" name="productName" value="{{productName}}" placeholder="请输入品名" />
      </view>
      <view class="weui-cell__ft"></view></view>
    <!-- </navigator> -->
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">牌号</view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" name="grade" value="{{grade}}" placeholder="请输入牌号" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">厂商</view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" name="grades" value="{{grades}}" placeholder="请输入厂商" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">颜色</view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" name="colour" value="{{colour}}" placeholder="请输入颜色" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">
            <view class="red-box">数量(kg)</view>
        </view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" type="digit" name="count" value="{{count}}" placeholder="数量" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">
            <view class="red-box">联系人</view>
        </view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" name="linkman" value="{{linkman}}" placeholder="请输入联系人" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">
            <view class="red-box">手机</view>
        </view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" type="number" name="phone" value="{{phone}}" placeholder="请输入手机" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">
            <view class="red-box">存货地</view>
        </view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" name="place" value="{{place}}" placeholder="请输入存货地" />
      </view>
    </view>
  </view>
  <view class="weui-cells">
    <view class="weui-cell">
      <view class="weui-cell__bd">
        <view class="weui-uploader">
          <view class="weui-uploader__hd">
            <view class="weui-uploader__title">图片上传</view>
            <!-- <view class="weui-uploader__info">{{files.length}}/2</view> -->
          </view>
          <view class="weui-uploader__bd">
            <view class="weui-uploader__files" id="uploaderFiles">
              <block wx:for="{{files}}" wx:key="*this">
                <view class="weui-uploader__file">
                  <image class="weui-uploader__img" catch:tap="previewImage" id="{{item}}" src="{{imgHost + item}}" mode="aspectFill" />
                  <image class="icon-delete" src="/images/icon/icon-delete.png" mode="aspectFill" catch:tap="deleteImage" data-index="{{index}}" />
                  <!-- <view class="weui-uploader__file-content">{{item.progress}}%</view> -->
                </view>
              </block>
            </view>
            <view class="weui-uploader__input-box">
              <view class="weui-uploader__input" @tap="chooseImage"></view>
            </view>
          </view>
        </view>
      </view>
    </view>
  </view>
  <view class="weui-cells__title">描述</view>
  <view class="weui-cells weui-cells_after-title">
    <view class="weui-cell">
      <view class="weui-cell__bd">
        <textarea class="weui-textarea" name="describe" value="{{describe}}" placeholder="请输入描述" style="height: 3.3em" />
        <view class="weui-textarea-counter">0/200</view>
      </view>
    </view>
  </view>
  <view class="weui-btn-area weui-flex bg__white">
    <button class="weui-flex__item" type="default" formType="reset">重置</button>
    <button class="weui-flex__item" type="primary" formType="submit">确定</button>
  </view>
</form>
</template>
<script>
import wepy from "wepy";
import {
  __getApi
} from "../../config.js";
import base from "../../mixins/base";
import user from "../../mixins/user";
import http from "../../utils/Http";

export default class NewInformation extends wepy.page {
  mixins = [base, user];
  config = {
    navigationBarTitleText: "供求信息发布"
  };
  data = {
    id: "",
    imgHost: "",
    token_access: "",
    tipsFlag: false,
    typeList: ["求购", "供应"],
    typeIndex: 0,
    varietyList: [],
    varietyIndex: 0,
    variety: 1,
    chooseProduct: {
      name: "",
      id: ""
    },
    tipsMessage: "",
    files: [],
    productName: "",
    grade: "",
    grades: "",
    colour: "",
    count: "",
    linkman: "",
    phone: "",
    place: "",
    describe: ""
  };
  async getVarietyList() {
    const res = await http.get(
      __getApi._getVarietyList, {
        service_name: "TRADE_GOODSCLASSLIST"
      },
      true
    );
    if (res.false) return;
    this.varietyList = res.data;
    this.$apply();
  }
  async getMyInfroDetails() {
    const res = await http.get(__getApi._getMyInfroDetails, {
      token_access: this.token_access,
      id: this.id
    });
    if (res.false) return;
    this.typeIndex = res.data.type;
    this.varietyIndex = res.data.variety;
    // this.chooseProduct.name = res.data.productName;
    this.productName = res.data.productName;
    this.grade = res.data.grade ? res.data.grade : this.grade;
    this.grades = res.data.grades ? res.data.grades : this.grades;
    this.colour = res.data.colour ? res.data.colour : this.colour;
    this.count = res.data.count;
    this.linkman = res.data.linkman;
    this.phone = res.data.phone;
    this.place = res.data.place;
    this.describe = res.data.describe ? res.data.describe : this.describe;
    this.files = res.data.imgPaths ? res.data.imgPaths : this.files;
    this.$apply();
  }
  showTopTips() {
    this.tipsFlag = true;
    setTimeout(() => {
      this.tipsFlag = false;
      this.$apply();
    }, 3000);
  }
  async getProductList(param) {
    wx.showLoading({
      title: "上传中..."
    });
    const res = await http.post(__getApi._infromationUpload, param);

    wx.hideLoading();
    if (res.false) return;
    wx.showToast({
      title: "上传成功",
      icon: "success",
      duration: 1000
    });
    setTimeout(function() {
      wx.redirectTo({
        url: "/pages/mine/inforlist"
      });
    }, 1000);
  }
  async getMyInfroUpdata(param) {
    wx.showLoading({
      title: "上传中..."
    });
    const res = await http.post(
      __getApi._getMyInfroUpdata,
      Object.assign(this.getObject(param), {
        id: this.id
      })
    );

    wx.hideLoading();
    if (res.false) return;
    wx.showToast({
      title: "上传成功",
      icon: "success",
      duration: 1000
    });
    setTimeout(function() {
      wx.redirectTo({
        url: "/pages/mine/inforlist"
      });
    }, 1000);
  }
  uploadImage(filePath, i) {
    const that = this;
    const uploadTask = wx.uploadFile({
      url: __getApi._uploadImage,
      filePath: filePath,
      name: "file",
      formData: {
        token_access: this.token_access
      },
      success: function(res) {
        const resJson = JSON.parse(res.data);
        that.files = that.files.concat(resJson.data.imgpath);
        // that.files[i].img = that.imgHost + resJson.data.imgpath
        that.$apply();
      }
    });
    // uploadTask.onProgressUpdate((res) => {
    //   that.files[i].progress = res.progress
    //   that.$apply()
    //   console.log('上传进度', res.progress)
    //   console.log('已经上传的数据长度', res.totalBytesSent)
    //   console.log('预期需要上传的数据总长度', res.totalBytesExpectedToSend)
    // })
    // uploadTask.abort() // 取消上传任务
  }
  methods = {
    async chooseImage(e) {
      let res = await wepy.chooseImage({
        sizeType: ["original", "compressed"], // 可以指定是原图还是压缩图，默认二者都有
        sourceType: ["album", "camera"] // 可以指定来源是相册还是相机，默认二者都有
      });
      for (var i = 0; i < res.tempFilePaths.length; i++) {
        this.uploadImage(res.tempFilePaths[i], i);
      }
      // this.files = this.files.concat(res.tempFilePaths);
      // this.$apply();
    },
    previewImage(e) {
      wepy.previewImage({
        current: e.currentTarget.id, // 当前显示图片的http链接
        urls: this.data.files // 需要预览的图片http链接列表
      });
    },
    deleteImage(e) {
      const index = e.currentTarget.dataset.index;
      this.files.splice(index, 1);
    },
    bindVarietyChange(e) {
      this.varietyIndex = e.detail.value;
      this.variety = this.varietyList[e.detail.value].id;
      // this.chooseProduct = {};
      this.productName = ''
      this.$apply();
    },
    bindTypeChange(e) {
      this.typeIndex = e.detail.value;
    },
    chooseNext(e) {
      wx.navigateTo({
        url: "./filter?type=1&goods_class_id=" + this.variety
      });
    },
    formSubmit(e) {
      if (!this.required(e.detail.value.productName)) {
        this.tipsMessage = "请选择品名项";
        this.showTopTips();
        return;
      }
      if (!this.required(e.detail.value.count)) {
        this.tipsMessage = "数量为必填项";
        this.showTopTips();
        return;
      }
      if (!this.required(e.detail.value.linkman)) {
        this.tipsMessage = "联系人为必填项";
        this.showTopTips();
        return;
      }
      if (!this.isPhone(e.detail.value.phone)) {
        this.tipsMessage = "请填写正确的手机号码";
        this.showTopTips();
        return;
      }
      if (!this.required(e.detail.value.place)) {
        this.tipsMessage = "存货地为必填项";
        this.showTopTips();
        return;
      }
      const param = {
        token_access: this.token_access,
        type: this.typeIndex,
        variety: this.variety,
        // productName: this.chooseProduct.name,
        productName: this.productName,
        grade: e.detail.value.grade ? e.detail.value.grade : "",
        grades: e.detail.value.grades ? e.detail.value.grades : "",
        colour: e.detail.value.colour ? e.detail.value.colour : "",
        count: e.detail.value.count,
        describe: e.detail.value.describe ? e.detail.value.describe : "",
        linkman: e.detail.value.linkman,
        phone: e.detail.value.phone,
        place: e.detail.value.place,
        imgPaths: this.files
      };
      if (this.id) {
        this.getMyInfroUpdata(param);
      } else {
        this.getProductList(param);
      }
    }
  };
  onLoad(options) {
    // this.$needLogin()
    this.getVarietyList();
    this.imgHost = __getApi.imgHost;
    this.token_access = this.$parent.globalData.token_access;
    if (!this.token_access) {
      wepy.showModal({
          title: "提示",
          content: "发布供求信息之前请先登录",
          showCancel: false
        })
        .then(function(res) {
          if (res.confirm) {
            wepy.navigateTo({
              url: "/pages/user/login"
            });
          }
        });
    }
    if (options.id) {
      this.id = options.id;
      this.getMyInfroDetails();
    }
  }
  onShow() {
    // const pages = getCurrentPages();
    // const currPage = pages[pages.length - 1]; /* 当前页面 */
    //
    // this.chooseProduct.id = currPage.data.chooseProduct.id;
    // this.chooseProduct.name = currPage.data.chooseProduct.name;
    // this.$apply();
  }
}
</script>

<style lang="less">
.icon {
    width: 40rpx;
    height: 40rpx;
    margin-right: 10rpx;
}
.weui-input {
    width: 100%;
    border: 0;
    outline: 0;
    -webkit-appearance: none;
    background-color: transparent;
    font-size: inherit;
    color: inherit;
    height: 1.47058824em;
    line-height: 1.47058824;
}
.weui-label {
    width: 160rpx;
    word-wrap: break-word;
    word-break: break-all;
}
.weui-textarea-counter {
    color: #b2b2b2;
    text-align: right;
}
.weui-cell_select .weui-cell__bd:after {
    content: " ";
    display: inline-block;
    height: 6px;
    width: 6px;
    border-width: 2px 2px 0 0;
    border-color: #c8c8cd;
    border-style: solid;
    -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
    transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
    position: relative;
    top: -2px;
    position: absolute;
    top: 50%;
    right: 15px;
    margin-top: -4px;
}
.weui-btn-area {
    margin-top: 20rpx;
}
button {
    border-radius: 0;
}
.weui-toptips {
    position: fixed;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    top: 0;
    left: 0;
    right: 0;
    padding: 5px;
    font-size: 14px;
    text-align: center;
    color: #fff;
    z-index: 5000;
    word-wrap: break-word;
    word-break: break-all;
}
.weui-toptips_warn {
    background-color: #e64340;
}
.weui-uploader__file {
    position: relative;
}
.weui-uploader__file,
.weui-uploader__input-box {
    margin-top: 18rpx;
    margin-bottom: 10rpx;
}
.icon-delete {
    width: 40rpx;
    height: 40rpx;
    position: absolute;
    top: -10rpx;
    right: -10rpx;
    z-index: 2;
}
.red-box {
    width: 110rpx;
    color: #EB4E35;
    background: rgba(235,78,53,0.15);
    border: 1px solid rgba(235,78,53,0.65);
    border-radius: 2px;
    text-align: center;
    font-size: 28rpx;
}
</style>
