<template>
<view class="container bg__white">
  <view class="page__bd_spacing">
    <view class="total">{{chartData.remark}}</view>
    <view class="weui-flex">
      <view class="weui-flex__item">
        <text class="second-name">{{firstName}}/{{secondName}}</text>
      </view>
      <view class="more" @tap="isFilter">更多品种</view>
      <view class="arrow_down"></view>
    </view>
  </view>
  <view>
    <view hidden="{{noList}}" class="mychart">
      <ec-canvas id="mychart" canvas-id="mychart-line" ec="{{ ec }}"></ec-canvas>
    </view>
    <view class="image" wx:if="{{noList}}">
      <image style="width: 154px; height: 237px;" src="/images/nolist.png"></image>
    </view>
  </view>

  <view wx:if="{{!isFilter}}" class="choose-pro weui-flex">
    <view class="left">
      <scroll-view scroll-y style="height: 100vh;">
        <view class="items" wx:for="{{sheetNameList}}" wx:for-item="first" wx:key="*this" wx:for-index='idxI'>
          <view class="title">{{first.label}}</view>
          <block wx:for="{{first.children}}" wx:for-item="second" wx:key="*this" wx:for-index="idxJ">
            <view class="item {{(idxI == i && idxJ == j) ? 'active' : ''}}" bindtap="chooseThird" data-first-index='{{idxI}}' data-second-index='{{idxJ}}'>
              <view class="text">{{second.label}}</view>
            </view>
          </block>
        </view>
      </scroll-view>
    </view>
    <view class="right weui-flex__item">
      <view class="item" wx:for="{{thirdLevel}}" wx:key="*this" @tap="chooseOK" data-third-name="{{item.label}}"><text class="circle"></text>{{item.label}}</view>
    </view>
  </view>
  <!-- <pickerView :list.sync="sheetNameList" :firstLevel.sync="firstLevel" :secondLevel.sync="secondLevel" :thirdLevel.sync='thirdLevel' :isFilter.sync="isFilter" :nolist.sync="nolist"></pickerView> -->
  <view class="weui-flex date-choose">
    <view class="weui-flex__item text-center {{dateIndex == '0' ? 'cur' : ''}}" data-index=0 @tap="changeDate">
      <view class="placeholder">近1周</view>
    </view>
    <view class="weui-flex__item text-center {{dateIndex == '1' ? 'cur' : ''}}" data-index=1 @tap="changeDate">
      <view class="placeholder">近1月</view>
    </view>
    <view class="weui-flex__item text-center {{dateIndex == '2' ? 'cur' : ''}}" data-index=2 @tap="changeDate">
      <view class="placeholder">近3月</view>
    </view>
    <view class="weui-flex__item text-center {{dateIndex == '3' ? 'cur' : ''}}" data-index=3 @tap="changeDate">
      <view class="placeholder">近6月</view>
    </view>
    <view class="weui-flex__item text-center {{dateIndex == '4' ? 'cur' : ''}}" data-index=4 @tap="changeDate">
      <view class="placeholder">近1年</view>
    </view>
  </view>
  <view class="compare page__bd_spacing">
    <button class="weui-btn" type="primary" @tap="goCompare">趋势对比</button>
  </view>
  <view class="page__bd_spacing">
    <view class="table">
      <view class="tr bg-w">
        <view class="th td-hd">日期</view>
        <view class="th td-bd">价格</view>
        <view class="th td-fd">涨跌幅</view>
      </view>
      <!-- <scroll-view scroll-y style="height: 200px;" bindscrolltolower="lower"> -->
      <block wx:for="{{priceList}}" wx:key="id">
        <view class="tr bg-b">
          <view class="td td-hd">{{item.date}}</view>
          <block wx:if="{{item.comparePrice>0}}">
            <view class="td td-fd font-rise">{{item.price}}{{item.unit}}</view>
            <view class="td td-fd font-rise">{{item.comparePrice}}%</view>
          </block>
          <block wx:elif="{{item.comparePrice<0}}">
            <view class="td td-fd font-decline">{{item.price}}{{item.unit}}</view>
            <view class="td td-fd font-decline">{{item.comparePrice}}%</view>
          </block>
          <block wx:else="{{item.comparePrice===0}}">
            <view class="td td-fd font-level">{{item.price}}{{item.unit}}</view>
            <view class="td td-fd font-level">0.00</view>
          </block>
        </view>
      </block>
      <!-- </scroll-view> -->
    </view>
    <listStates :loading.sync="loading" :noMore.sync="noMoreList" :noList.sync="noList"></listStates>
  </view>
</view>
</template>

<script>
import wepy from "wepy";
import {
  __getApi
} from "../../config.js";
import base from "../../mixins/base";
import http from "../../utils/Http";
import * as echarts from "../../ec-canvas/echarts";
import listStates from '../../components/listStates'

let chart = null;

function initChart(canvas, width, height) {
  chart = echarts.init(canvas, null, {
    width: width,
    height: 300
  });
  canvas.setChart(chart);

  var option = {
    color: ["#99A5EA", "#EB4E35"],
    tooltip: {
      trigger: "none",
      axisPointer: {
        type: "cross"
      }
    },
    legend: {
      data: [],
      top: 0,
      left: "center",
      backgroundColor: "white",
      z: 2
    },
    grid: {
      containLabel: true
    },

    xAxis: {
      type: "category",
      boundaryGap: false,
      axisLine: {
        onZero: false
      },
      axisPointer: {
        label: {
          formatter: function(params) {
            return (
              params.value +
              "\n" +
              (params.seriesData[0] ?
                "出厂价：" +
                params.seriesData[0].data :
                "") +
              "\n" +
              (params.seriesData[1] ?
                params.seriesData[1].seriesName +
                "：" +
                params.seriesData[1].data :
                "")
            );
          }
        }
      },
      data: []
      // show: false
    },
    yAxis: {
      axisLine: {
        lineStyle: {
          color: "#4A5675"
          // width:2
        }
      },
      type: "value",
      splitLine: {
        show: false
      },
      scale: true
    },
    series: []
  };
  chart.setOption(option);
  return chart;
}
export default class ChartCompare extends wepy.page {
  mixins = [base]
  components = {
    listStates
  };
  config = {
    navigationBarTitleText: "小八塑价对比",
    // enablePullDownRefresh: true,
    onReachBottomDistance: 100,
    usingComponents: {
      "ec-canvas": "../../ec-canvas/ec-canvas"
    }
  };
  data = {
    start: 1,
    limit: 30,
    noMoreList: false,
    noList: false,
    loading: true,
    priceList: [],
    windowWidth: "",
    basisData: null,
    startDate: [],
    endDate: [],
    chartData: [],
    sheetNameList: [],
    sheetName: [],
    isFilter: true,
    type: 0,
    thirdLevel: [],
    firstName: "",
    secondName: "",
    dateIndex: 0,
    chartState: false,
    // pickerStatus: false,
    ec: {
      onInit: initChart,
      lazyLoad: true
    },
    firstcompareName: "",
    i: 0,
    j: 0
  };
  events = {
    // eventName: (p1, $event) => {
    //   const firstName = this.sheetNameList[p1[0]].label;
    //   const secondName = this.sheetNameList[p1[0]].children[p1[1]].label;
    //   const thirdName = this.sheetNameList[p1[0]].children[p1[1]].children[
    //     p1[2]
    //   ].label;
    //   this.sheetName = firstName + "/" + secondName + "/" + thirdName;
    //   this.firstName = firstName;
    //   this.secondName = secondName + "/" + thirdName;
    //   this.getSheetList();
    //   this.getList()
    //   this.$apply();
    // }
  };
  methods = {
    chooseThird(e) {
      this.i = e.currentTarget.dataset.firstIndex
      this.j = e.currentTarget.dataset.secondIndex
      this.thirdLevel = this.sheetNameList[this.i].children[this.j].children
      this.$apply()
    },
    chooseOK(e){
        this.firstName = this.sheetNameList[this.i].label;
        this.secondName = this.sheetNameList[this.i].children[this.j].label + "/" + e.currentTarget.dataset.thirdName;
        this.sheetName = this.firstName + "/" + this.secondName;
        this.getSheetList();
        this.getList()
        this.isFilter = true;
        this.$apply();
    },
    changeDate(e) {
      this.dateIndex = e.currentTarget.dataset.index;
      let data = new Date();
      let startDate = new Date(data);
      switch (this.dateIndex) {
        case "0":
          startDate.setDate(data.getDate() - 7);
          break;
        case "1":
          startDate.setDate(data.getDate() - 30);
          break;
        case "2":
          startDate.setDate(data.getDate() - 90);
          break;
        case "3":
          startDate.setDate(data.getDate() - 180);
          break;
        case "4":
          startDate.setDate(data.getDate() - 365);
          break;
        default:
          break;
      }
      this.startDate = this.formatTime(startDate);
      this.getSheetList();
      this.$apply();
    },
    isFilter() {
      this.isFilter = false;
      this.noList = true;
      this.$apply();
    },
    goCompare() {
      // wepy.navigateTo({
      //   url: "./chart-compare?name=" + encodeURIComponent(this.sheetName)
      // });
      wepy.navigateTo({
          url: './chart-filter?name=' + encodeURIComponent(this.sheetName)
      })
    }
  };
  async getSheetNames() {
    const res = await http.get(__getApi.getLabel);
    if (res.false) return;
    this.sheetNameList = res.data;
    this.thirdLevel = this.sheetNameList[0].children[0].children;

    this.firstName = this.sheetNameList[this.type].label;
    this.secondName = this.sheetNameList[this.type].children[0].label + "/" + this.sheetNameList[this.type].children[0].children[0].label;
    this.$apply();
  }
  async getSheetList() {
    wepy.showLoading({
      title: "加载中"
    });
    const res = await http.get(__getApi.getDatas, {
      sheetName: this.sheetName,
      start: this.startDate,
      end: this.endDate
    });
    if (res.false) return;
    this.chartData = res.data;
    if (res.data.price.length > 0) {
      this.noList = false;
      chart.setOption({
        legend: {
          data: [res.data.name, "5日均价"]
        },
        xAxis: {
          data: res.data.date
        },
        yAxis: {
          name: "销售单价 " + res.data.unit
        },
        series: [{
            name: res.data.name,
            type: "line",
            smooth: true,
            data: res.data.price
          },
          {
            name: "5日均价",
            type: "line",
            smooth: true,
            data: res.data.five_ave
          }
        ]
      });
    } else {
      this.noList = true;
    }
    wepy.hideLoading();
    this.$apply();
  }
  async getList() {
    if (this.start === 1) {
      this.priceList = []
    }
    const res = await http.get(__getApi._getSheetDataList, {
      sheetName: this.sheetName,
      page_id: this.start,
      page_limit: this.limit
    })

    this.loading = false
    if (res.false) return
    if (res.data.list.length === 0) {
      this.noList = true
    }
    if (this.start === 1) {
      this.priceList = res.data.list
      this.maxPage = Math.ceil(res.data.count / this.limit)
    } else {
      this.priceList = [
        ...this.priceList,
        ...res.data.list
      ]
    }
    this.$apply()
    wepy.stopPullDownRefresh()
  }
  onReachBottom() {
    if (this.start < this.maxPage) {
      ++this.start
      this.getList()
    } else {
      this.noMoreList = true
    }
    this.$apply()
  }
  async onLoad(options) {
    try {
      this.windowWidth = wepy.getSystemInfoSync().windowWidth || 300;
    } catch (e) {
      console.error("getSystemInfoSync failed!");
    }
    this.$wxpage.selectComponent("#mychart").data.ec.onInit = initChart;
    this.$wxpage.selectComponent("#mychart").init();

    let data = new Date();
    let startDate = new Date(data);
    startDate.setDate(data.getDate() - 7);
    this.startDate = this.formatTime(startDate);
    this.endDate = this.formatTime(data);

    this.type = options.type || this.type;
    await this.getSheetNames();
    this.firstName = options.firstName || this.firstName;
    this.secondName = options.secondName || this.secondName;
    this.sheetName = this.firstName + "/" + this.secondName;
    wepy.showLoading({
      title: "加载中"
    });
    setTimeout(() => {
      this.getSheetList()
      this.getList()
    }, 500)
    this.$apply();
  }

  onShareAppMessage(res) {
    return {
      title: "小八塑价",
      path: '/pages/other/chart-list?firstName=' + this.firstName + '&secondName=' + this.secondName
    };
  }
}
</script>

<style lang="less">
/* .container {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
} */
/* #mychart {
  width: 375px;
  height: 300px;
} */
.choose-pro {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    z-index: 99;
    background: #fff;
}
.left {
    width: 220rpx;
    text-align: center;
    border-right: 2rpx solid #E4E7F0;
    .title {
        font-size: 18px;
        color: #8F8E94;
        line-height: 80rpx;
        background: #F4F5F9;
        font-weight: bold;
    }
    .item {
        font-size: 16px;
        color: #3D3D3D;
        padding: 16rpx 0;
        .text {
            line-height: 48rpx;
        }
    }
    .item.active {
        background: #F9F9F9;
    }
    .item.active .text {
        font-weight: bold;
        border-left: 8rpx solid #323972;
    }
}
.right {
    padding: 0 30rpx;
    font-size: 16px;
    color: #3D3D3D;
    .item {
        padding: 20rpx 0;
        vertical-align: middle;
    }
    .circle {
        width: 10rpx;
        height: 10rpx;
        background: #323972;
        border-radius: 50%;
        margin-right: 10rpx;
        vertical-align: middle;
    }
}
.total {
    font-size: 40rpx;
    color: #1e1e1e;
    padding-bottom: 20rpx;
}
.second-name {
    font-size: 18px;
    color: #323972;
    background: #a1a6bb;
    border-radius: 2px;
    padding: 6rpx 30rpx;
}
.date-choose {
    height: 80rpx;
    background: #e4e7f0;
}
.date-choose .weui-flex__item {
    height: 62rpx;
    line-height: 62rpx;
}
.date-choose .weui-flex__item.cur {
    background: #fff;
}
.compare {
    margin: 40rpx 0;
}
.image {
    text-align: center;
}
.more {
    font-size: 28rpx;
    color: #8f8e94;
    line-height: 68rpx;
}
.arrow_down {
    width: 0;
    height: 0;
    border-left: 4px solid transparent;
    border-right: 4px solid transparent;
    border-top: 4px solid #8f8e94;
    margin-top: 30rpx;
}
.table {
    border: 0 solid darkgray;
    font-size: 28rpx;
}
.tr {
    display: flex;
    width: 100%;
    justify-content: center;
    min-height: 80rpx;
    align-items: center;
}
.th {
    justify-content: center;
    text-align: left;
    font-weight: bold;
}
.td {
    justify-content: center;
    text-align: left;
}
.bg-w {
    background: #F4F5F9;
    color: #323972;
}
.td-head {
    width: 100%;
    text-align: left;
    font-weight: bold;
    padding-left: 20rpx;
}
.td-hd {
    width: 33.33%;
    text-align: center;
}
.td-bd {
    width: 33.33%;
    text-align: center;
}
.td-fd {
    width: 33.33%;
    text-align: center;
}
.bg-b {
    border-bottom: 2rpx solid #EDEDED;
}
.font-rise {
    color: #e64340;
}
.font-decline {
    color: #33e751;
}
.font-level {
    color: #999;
}
</style>
