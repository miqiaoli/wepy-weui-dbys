<template>
<view class="rice-list">
  <view class="search">
    <view class="weui-search-bar__form" style="line-height: 60rpx; background: #FFFFFF; border-radius: 60rpx; border: 0">
      <view class="weui-search-bar__box">
        <icon class="weui-icon-search_in-box" type="search" size="14"></icon>
        <input type="text" class="weui-search-bar__input" style="height: 60rpx;line-height: 60rpx; text-align: left;" placeholder="搜索您想要的内容" bindconfirm bindinput="searchText" value="{{this.keyword}}" />
      </view>
    </view>
  </view>
  <view class="filter weui-flex">

    <view class="weui-flex__item">
      <view class="col-width active picker" style="" bindtap="riseModel">
        {{chooseCitys ? chooseCitys : '全部'}}
        <text class="arrow-down arrow-pos"></text>
      </view>
    </view>
    <view class="weui-flex__item">
      <view class="col-width active picker" style="" >
        <picker class="inline-block" style="" mode="selector" bindchange="sortTypeChange" value="{{sortIndex}}" range="{{sortType}}">
          <view class="picker">
            {{ sortType[sortIndex] }}
            <text class="arrow-down arrow-pos"></text>
          </view>
        </picker>
      </view>
    </view>

  </view>
  <!-- 区域 -->
  <view wx:if="{{!isCity}}" class="citys" catchtouchmove='preventTouchMove'>
    <view class="inner_box">
      <view class="header_box">
        <view class="item l" data-act="cancel" data-mold="city" bindtap="chooseFalse">取消</view>
        <view class="item c">请选择</view>
        <view class="item r" data-act="confirm" data-mold="city" bindtap="chooseTrue">确定</view>
      </view>
      <picker-view class="picker_box" indicator-class="selected" value="{{cityValue}}" bindchange="cityChange">
        <picker-view-column>
          <view wx:for="{{provices}}" wx:key='index'>{{item.label}}</view>
        </picker-view-column>
        <picker-view-column>
          <view wx:for="{{urban}}" wx:key='index'>{{item.label}}</view>
        </picker-view-column>
      </picker-view>
    </view>
    <view class="layer" catchtouchstart="removeLayer" data-type='isCity'></view>
  </view>
  <view class="list"> 
    <view wx:for="{{realList}}" wx:key="*this" wx:for-item="single"  id="{{single.id}}" bindtap="todetail" class="single">
      <view class="name">
        <rich-text nodes="{{single.custNname}}"></rich-text>
      </view>
      <view class="weui-flex">
        <view class="detail weui-flex__item weui-flex">
          <!-- <view class="weui-flex__item">主营产品：</view> -->
          <rich-text nodes="{{single.mainProducts}}"></rich-text>
          </view>
        <view class="weui-cell__ft weui-cell__ft_in-access pos"></view>
      </view>   
      <view class="dis">
        <image class="icon" src="/images/icon/pos.png" />
        {{single.place}}
      </view>
    </view>
  </view>

  <view wx:if="{{ count == 0 }}" class="weui-loadmore weui-loadmore_line">
    <text class="weui-loadmore__tips">暂无数据</text>
  </view>
  <block wx:if="{{loading}}">
    <view class="weui-loadmore">
      <view class="weui-loading"></view>
      <view class="weui-loadmore__tips">正在加载</view>
    </view>
  </block>
</view>
</template>

<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import http from '../../utils/Http'

export default class RiceList extends wepy.page {
  config = {
    navigationBarTitleText: '早稻',
    enablePullDownRefresh: true,
    onReachBottomDistance: 50,
    usingComponents: {
      "rich-parse": "../rich-parse/rich-parse"
    }
  }
  data = {
    sortType: ['智能排序', '距离优先'],
    sortIndex: 1,
    chooseCitys: '',
    allType: [],
    provices: [],
    urban: [],
    area: [],
    provicesNum: '',
    province: '',
    city: '',
    isCity: true,
    cityValue: [0, 0],
    /** 多少条数据 */
    allCity: [{
      value: '',
      label: '全部',
      children: [{
        value: '',
        label: '全部',
        children: [{
          value: '',
          label: '全部'
        }]
      }]
    }],
    loading: false,
    keyword: '冰箱',
    pageNum: 1,
    pageSize: 15,
    lng: '',
    lat: '',
    province: '',
    city: '',
    count: 0,
    list: [],
    realList: []
  }
  methods = {
    removeLayer(e) {
      const type = e.currentTarget.dataset.type
      this[type] = !this[type]
    },
     // 确认选择 处理
    chooseTrue() {
      this.isCity = true
      if (this.cityValue[0] == 0) {
        this.chooseCitys = ''
      } else {
        this.chooseCitys = this.provices[this.cityValue[0]].label + ' ' + this.urban[this.cityValue[1]].label.replace(/市|全部/, '') + '  '
      }
      // this.chooseCitysNum = this.provices[this.cityValue[0]].value + ' ' + this.urban[this.cityValue[1]].value
      this.province = this.provices[this.cityValue[0]].label
      this.city = this.urban[this.cityValue[1]].label.replace(/市/, '')
      this.pageNum = 1
      this.list = []
      this.getCompanyList()
    },
    // 城市级联数据改变处理
    cityChange(e) {
      let val = e.detail.value
      var t = this.cityValue // 城市数据坐标 0 0 0
      const allCity = this.allCity
      if (val[0] !== t[0]) {
        let urban = []
        // 市处理
        val[val[0], 0]
        allCity[val[0]].children.forEach((val, index) => {
          urban.push({
            'value': val.value,
            'label': val.label
          })
        })
        const addAll = [{
          value: '',
          label: '全部'
        }]
        this.urban = [...addAll, ...urban]
        this.cityValue = [e.detail.value[0], 0]      
        this.$apply()
      }
      if (val[1] !== t[1]) {
        let area = []
        const addAll = [{
          value: '',
          label: '全部'
        }]
        val[val[0], val[1]]
        allCity[val[0]].children[val[1] - 1].children.forEach((val, index) => {
          area.push({
            'value': val.value,
            'label': val.label
          })
        })
        this.area = [...addAll, ...area]
        this.cityValue = [e.detail.value[0], e.detail.value[1]]
        this.$apply()
      }
    },
    preventTouchMove(e) {},
    // 唤起城市选择
    riseModel() {
      this.isCity = false
    },
    chooseFalse() {
      this.isCity = true
    },
    // 排序规则改变
    sortTypeChange(e) {
      this.sortIndex = e.detail.value
      this.pageNum = 1
      this.list = []
      this.getCompanyList()
    },
    searchText(e) {
      this.keyword = e.detail.value
    },
    async bindconfirm(e) {
      this.keyword = e.detail.value
      this.pageNum = 1
      this.list = ''
      this.realList = '' 
      this.getCompanyList()
    },
    // 到详情
    todetail(event) {
      wx.navigateTo({
        url: '/pages/rice/details?id=' + event.currentTarget.id
      })
    },
  }
  // 高亮
  highLight(str) {
    let high = str.replace(/#--/g, "<span class='red'>").replace(/--#/g, "</span>")
    let realList = JSON.parse(high)
    this.realList = [...this.realList, ...realList]
  }
  // 城市数据获取
  async getAllCity() {
    const res = await http.get(__getApi._getAllCityList, {})
    this.allCity = [...this.allCity, ...res.data]
    this.allCity.forEach((val, index) => {
      this.provices.push({
        'value': val.value,
        'label': val.label
      })
    })
    this.allCity[0].children.forEach((val, index) => {
      this.urban.push({
        'value': val.value,
        'label': val.label
      })
    })
    this.allCity[0].children[0].children.forEach((val, index) => {
      this.area.push({
        'value': val.value,
        'label': val.label
      })
    })
    this.$apply()
  }
  // 公司列表数据
  async getCompanyList() {
    this.loading = true
    const res = await http.get(__getApi._getRiceList, {
      keyword: this.keyword,
      pageNum: this.pageNum,
      pageSize: this.pageSize,
      province: this.province,
      city: this.city,
      lng: this.lng,
      lat: this.lat,
      token_access: this.token_access
    })
    wx.stopPullDownRefresh()
    this.loading = false
    this.$apply()
    if (res.false) return
    if (res.meta.success) {
      this.count = res.meta.success ? res.data.count : this.count
      // if (this.pageNum * this.pageSize - this.pageNum > this.count) {
      //   this.loading = false
      //   wx.showToast({
      //     title: '没有更多了',
      //     icon: 'none',
      //     duration: 2000
      //   })
      //   return
      // }
      if (this.count < this.pageNum * this.pageSize - this.pageSize) return
      this.pageNum++
      this.list = [...this.list, ...res.data.list]
      this.highLight(JSON.stringify(this.list))
      this.$apply()  
    }
  }
  onLoad() {
    let self = this
    this.token_access = this.$parent.globalData.token_access
    this.getAllCity()
    wx.getLocation({
      type: 'wgs84',
      success: function(res) {
        self.lat = res.latitude
        self.lng = res.longitude
        self.getCompanyList()
      }
    })
  }
  // 加载更多
  async onReachBottom() {
    console.log('111111')
    this.loading = true
    this.getCompanyList()
  }
  // 刷新
  onPullDownRefresh() {
    this.pageNum = 1
    this.list = []
    this.getCompanyList()
  }
}
</script>

<style lang="less">
.red {
  font-weight: bold;
  color: red;
}
.arrow-down {
  margin-left: 8rpx;
  display: inline-block;
  vertical-align: top;
  border-top: 6px solid #353535;
  border-right: 6px solid transparent;
  border-left: 6px solid transparent;
  content: "";
}

.pos {
  position: relative;
}
.rice-list {
  height: 100vh;
  background: #EDEDED;
}
.search {
  margin: 30rpx 120rpx;
}
.filter {
  padding: 0 30rpx;
  height: 80rpx;
  line-height: 80rpx;
  text-align: center;
  justify-content: space-between;
  border-bottom: 1px solid #EDEDED;
  font-size: 16px;
  background: #ffffff;
  .col-width {
    position: relative;
    padding: 0 6rpx;
    // width: 176rpx;
    text-align: center;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    .arrow-pos {
      position: absolute;
      top: 38rpx;
    }
  }
}
.single {
  position: relative;
  margin-bottom: 10rpx;
  padding: 20rpx 30rpx;
  background: #ffffff;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  .name {
    font-size: 18px;
    font-weight: bold;
    color: #030000;
  }
  .highlight {
    color: #F52020;
  }
  .detail {
    position: relative;
    margin: 20rpx 0;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    font-size: 14px;
    color: #080000;
  }
  .dis {
    font-size: 12px;
    color: #9F9E9E;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    .icon {
      width: 10rpx;
      height: 20rpx;
    }
  }
}
/*选择器*/
.citys {
    width: 100%;
    position: fixed;
    bottom: 0;
    left: 0;
    z-index: 999999;
}
.citys .inner_box {
    position: relative;
    z-index: 999999;
}
.citys .header_box {
    padding: 25rpx 0;
    overflow: hidden;
    box-sizing: border-box;
    background: #FBF9FE;
}
.citys .header_box .item {
    float: left;
    font-size: 34rpx;
    color: #586C94;
    box-sizing: border-box;
}
.citys .header_box .l {
    width: 25%;
    padding-left: 25rpx;
}
.citys .header_box .c {
    width: 50%;
    text-align: center;
}
.citys .header_box .r {
    width: 25%;
    text-align: right;
    padding-right: 25rpx;
}
.citys .selected {
    height: 90rpx;
}
.citys .picker_box {
    width: 100%;
    height: 485rpx;
    background: #fff;
}
.citys .picker_box picker-view-column {
    text-align: center;
}
.citys .picker_box picker-view-column view {
    line-height: 90rpx;
}
.layer {
    width: 100%;
    height: 100%;
    position: fixed;
    left: 0;
    top: 0;
    z-index: 10;
    background: rgba(0,0,0,0.5);
}
</style>
