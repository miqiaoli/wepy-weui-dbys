<template>
<!--<view wx:if="{{productDetails.article_title.title}}" class="page page__bd bg__white">
    <view class="weui-article">
      <view class="weui-article__h1">{{productDetails.article_title.title}}</view>
      <view class="weui-media-box__info">
        <view class="weui-media-box__info__meta">作者：{{productDetails.article_title.author || '未知'}}</view>
        <view class="weui-media-box__info__meta">{{productDetails.article_title.date}}</view>
      </view>
      <view class="weui-article__section">
        <view class="weui-article__p">
          <rich-parse content="{{ textContent }}" type="html" />
        </view>
      </view>
      <view class="author">
        <image class="avatar" src="/images/author.png" />
        <view class="username">{{productDetails.article_title.author || '未知'}}</view>
      </view>
    </view>
    <view hidden="{{true}}" class="hot-news">
      <view class="top weui-flex" style="justify-content: space-between; margin-bottom: 0;">
        <view class="nav">热门文章</view>
        <view @tap="toList" data-tag="2" class="more">更多</view>
      </view>
      <view @tap="toNewsDls" data-id="{{news.id}}" wx:for="{{hotNewsList}}" wx:key="id" wx:for-index="i" wx:for-item="news" class="single-news weui-flex" style="justify-content: space-between;">
        <view class="weui-flex__item left-flex">
          <view class="sub-title">{{news.title}}</view>
          <view class="" style="font-size:12px;font-weight:500;color:#333333;">{{news.author || '未知'}} 
            <text style="margin-left:10px;color:#666666;">{{news.date}}</text>
          </view>
        </view>
        <view class="img">
        </view>
      </view>
    </view>
  <view wx:if="{{showFocus}}" class="fix-bootom weui-flex">
    <view class="weui-flex__item">
      <input 
        class="input weui-search-bar__form weui-icon-search" 
        placeholder="评论"
        type="text"
        value="{{commit}}"
        focus="{{showFocus}}"
        bindinput="commitValue"
        bindblur='hideCommit'
        />
    </view>
    <view @tap="send" class=""><text class="commit">发送</text></view>
  </view>
  <view class="comment">
    <view class="weui-flex" style="justify-content: space-between; margin-bottom: 10px;font-size:12px;">
      <view class="weui-flex__item" style="color:#999;">精选评论</view>
      <view wx:if="{{user}}" @tap="showComment" class="" style="padding:0 8px;color:#333;">评论</view>
      <button wx:else open-type="getUserInfo" bindgetuserinfo="bindGetUserInfo" 
        style="padding:0 8px;color:#333;font-size:12px;background-color: #efefef;">评论</button>
    </view>
    <view class="weui-flex" style="margin-bottom:20px;" wx:for="{{commons}}" wx:key="index" wx:for-index="index" wx:for-item="item">
      <image style="height:32px;width:32px;min-width:32px;" src="{{item.namePic}}" />
      <view class="comment-text">{{item.content}}</view>
    </view>
  </view>
</view>-->
<web-view src="{{link}}"></web-view>
</template>

<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import base from '../../mixins/base'
import http from '../../utils/Http'
// import html2wxml from '../components/html2wxml'

export default class NewsDls extends wepy.page {
  mixins = [base]
  config = {
    navigationBarTitleText: '文章详情页',
    usingComponents: {
      'rich-parse': '../../rich-parse/rich-parse'
    }
  }
  data = {
    id: '',
    productDetails: {},
    // name: 'myHtmlParserKiner',
    textContent: '',
    imgHost: 'https://www.otimes.com',
    hotNewsList: [],
    commit: '',
    showFocus: false,
    user: null,
    token_access: '',
    link: ''
  }
  methods = {
    async bindGetUserInfo(e) {
      const self = this
      const res = await wepy.request({
        url: __getApi._getUnionID,
        data: {
          token_access: self.token_access,
          　　　　 encryptedData: e.detail.encryptedData,
          　　　　 iv: e.detail.iv
        }
      })
      const userInfo = res.data.data
      wepy.setStorage({
        key: 'user_info',
        data: JSON.stringify(userInfo)
      })
      this.user = userInfo
      this.showFocus = true
      this.$parent.$updateGlobalData('user_info', JSON.stringify(userInfo))
    },
    showComment(e) {
      this.showFocus = true
    },
    commitValue(e) {
      this.commit = e.detail.value
    },
    // 评论
    async send(e) {
      let val = this.commit
      let self = this
      if (!val) {
        wx.showToast({
          title: '评论不能为空',
          icon: 'none',
          duration: 2000
        })
      } else {
        // 请求接口,返回提示
        const res = await http.post(__getApi._toCommit, {
          contentId: this.id,
          content: val,
          openId: this.user.openId
        })
        if (res.meta.success) {
          this.commit = ''
          wx.showToast({
            title: res.data,
            icon: 'none',
            duration: 2000
          })
          setTimeout(() => {
            self.showFocus = false
          }, 2000)
        }
      }
    },
    hideCommit(e) {
      let self = this
      setTimeout(() => {
        self.showFocus = false
        self.$apply()
      }, 500)
    },
    toList(e) {
      const index = e.currentTarget.dataset.tag
      wx.navigateTo({
        url: `./list?index=${index}`
      })
    },
    toNewsDls(e) {
      const id = e.currentTarget.dataset.id
      wx.navigateTo({
        url: `./news?id=${id}`
      })
    }
  }
  async getList() {
    const res = await http.get('https://www.otimes.com/front/weixin/getArticle.dbys?count=1&offset=0')
    console.log(res.data.list[0].content.news_item[0].content)
    this.textContent = res.data.list[0].content.news_item[1].content
    this.$apply()
  }
  async getNewsDetails() {
    const res = await http.get(__getApi._getNewsDls, {
    // const res = await http.get(__getApi._getNewsDetails, {
      id: this.id
    })
    if (res.false) return
    // this.productDetails = res.data
    // this.textContent = res.data.article_content
    // this.commons = res.data.commons
    this.link = decodeURIComponent('https:'+res.data.article_title.originUrl.split(':')[1])
    this.$apply()
  }
  onLoad(options) {
    this.id = options.id || 11706
    this.user = this.$parent.globalData.user_info ? JSON.parse(this.$parent.globalData.user_info) : ''
    this.$apply()
    this.getNewsDetails()
    // if (!this.user) {
    //   this.getCodeei()
    // }
  }
  async getCodeei() {
    const login = await wepy.login()
    const res = await wepy.request({
      url: __getApi._getPrivacyToken,
      data: {
        token_access: this.token_access,
        code: login.code
      }
    })
    this.token_access = res.data.data.token_access
    this.$apply()
  }
  onShareAppMessage(e) {
    return {
      title: this.productDetails.article_title.title,
      path: `/pages/group/news?id=${this.id}`
    }
  }
  onShareTimeline(e) {
    return {
      title: this.productDetails.article_title.title,
      path: `/pages/group/news?id=${this.id}`
    }
  }
}
</script>

<style lang="less" scoped>
@base-gap: 20rpx;
.weui-index image {
    width: 100rpx;
    height: 100rpx;
    position: fixed;
    right: 40rpx;
    bottom: 60rpx;
}
.author {
  text-align: center;
  .avatar {
    height: 60px; 
    width:60px;
    // background: #D8D8D8;
    // border-radius: 50%;
  }
  .username {
    font-weight: 500; font-size: 14px;
  }
}
.top {
  margin: 8px 0;
  .nav {
    font-size:18px;
    font-weight: 500;
    color: #333333;
  }
  .more {
    color: #302424;
    font-weight: 400;
    font-size:16px;
  }
}
.hot-news {
  margin: 0 16px;
  .left-flex {
    display: flex; flex-direction: column;align-items: stretch;justify-content: space-between;align-content: space-between;
  }
  .single-news {
    border-bottom: 1px solid red; // #EFEFEF
    padding: 10px 0;
    &:last-child {
      border-bottom: 0;
    }
  }

  .sub-title {
    overflow : hidden;
    text-overflow: ellipsis;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    color: #333333;
    font-size:14px;
    font-weight:500;
  }
  .img {
    margin-left: 10px;
    height: 60px;
    width: 60px;
    background: #D8D8D8;
    border-radius: 50%;
  }
}
.fix-bootom {
  padding: 4px 10px;
  position: fixed;
  bottom: 0px;
  left: 0;
  right: 0;
  background: #efefef;
  z-index: 8;
}
.input {
  margin-right: @base-gap;
  padding-left: 20px;
  padding-right: @base-gap;
  height: 72rpx;
  border-radius: 36rpx;
}
.commit {
  margin: 6px 0;
  padding: 0 6px;
  background: #1aad19;
  color: white;
  border-radius: 2px;
}
.comment {
  background: #efefef;
  padding: 10px 10px 10px 10px;
  .comment-text {
    margin-left: 10px; font-size: 12px; font-weight: 400; color: #666666;
  }
}
</style>
