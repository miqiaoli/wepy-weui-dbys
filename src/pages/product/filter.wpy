<template>
<view class="page-index bg__white">
  <view class="weui-cells weui-cells_after-title">
    <radio-group @change="radioChange">
      <label class="weui-cell weui-check__label">
          <radio class="weui-check" value=",全部"/>
          <view class="weui-cell__bd">全部</view>
      </label>
      <label class="weui-cell weui-check__label" wx:for="{{productNameList}}" wx:key="id">

        <!-- <view class="weui-cell__ft weui-cell__ft_in-radio" wx:else>
            <view class="weui-icon-radio circle"></view>
        </view> -->
          <radio class="weui-check" value="{{item.id + ',' + item.descrip}}" checked="{{item.checked}}"/>
          <view class="weui-cell__bd">{{item.descrip}}</view>
          <view class="weui-cell__ft weui-cell__ft_in-radio" wx:if="{{item.checked}}">
              <icon class="weui-icon-radio" color="#0078dd" type="success" size="20"></icon>
          </view>
      </label>
    </radio-group>
  </view>
  <!-- <view class="weui-btn-area">
    <button class="weui-btn" type="primary" @tap="showTopTips">确定</button>
  </view> -->
</view>
</template>
<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import base from '../../mixins/base'
import http from '../../utils/Http'

export default class Filter extends wepy.page {
  mixins = [base]
  config = {
    navigationBarTitleText: '刷选'
  }
  data = {
    type: null,
    goods_class_id: '',
    productNameList: []
  }
  methods = {
    radioChange(e) {
      this.productNameList.forEach(v => {
        v.checked = v.id == e.detail.value.split(',')[0]
      })

      const pages = getCurrentPages()
      const prevPage = pages[pages.length - 2] /* 上一个页面 */
      let chooseType = ''

      switch (this.getNumber(this.type)) {
        case 1:
          chooseType = 'chooseProduct'
          break
        case 2:
          chooseType = 'chooseGrade'
          break
        case 3:
          chooseType = 'chooseVendor'
          break
        default:
          break
      }

      prevPage.data[chooseType].name = e.detail.value.split(',')[1]
      prevPage.data[chooseType].id = e.detail.value.split(',')[0]
      wx.navigateBack()
    }
  }
  async getProductNameList() {
    const res = await http.get(__getApi._getProductNameList, {
      service_name: 'TRADE_GOODSLIST',
      goods_class_id: this.goods_class_id
    })
    if (res.false) return
    this.productNameList = res.data
    this.$apply()
  }
  async getAdvOptionsList() {
    const res = await http.get(__getApi._getAdvOptionsList, {
      service_name: 'TRADE_ATTSERACH',
      goods_class_id: this.goods_class_id,
      goods_id: this.goods_id
    })
    if (res.false) return
    if (this.type === '2') {
      this.productNameList = res.data.att2s
    } else {
      this.productNameList = res.data.att1s
    }
    this.$apply()
  }
  onLoad(options) {
    this.type = options.type
    this.goods_class_id = options.goods_class_id
    this.goods_id = options.goods_id ? options.goods_id : ''
    if (this.type === '1') {
      this.getProductNameList()
    } else {
      this.getAdvOptionsList()
    }
  }
}
</script>

<style lang="less">
.user .item {
    height: 88rpx;
    line-height: 88rpx;
}
.user + .user .item {
    border-top: 2rpx solid #e9e7e7;
}

.weui-check {
    position: absolute;
    left: -9999px;
}
.weui-cell__ft_in-radio {
    padding-right: 0.35em;
}
.circle {
    display: inline-block;
    width: 18px;
    height: 18px;
    border: 2rpx solid #ccc;
    border-radius: 50%;
    background: #ffffff;
    vertical-align: middle;
}
.weui-cells {
    padding-bottom: 90rpx;
}
.weui-btn-area {
    position: fixed;
    width: 96%;
    left: 2%;
    bottom: 0;
}
</style>
