<template>
  <view class="note page">
    <view class="list">
      <view class="single" wx:for="{{list}}" wx:for-item="single" wx:key="id">
        <view class="item">
          <view class="weui-flex">
            <view class="weui-flex__item">{{single.commissionNum}}</view>
            <view class="weui-cell__ft">{{single.createDate}}</view>
          </view>
          <block wx:for="{{single.productName}}" wx:for-item="s" wx:key="id">
            <view class="name">{{s.product_name}}：<text class="red">{{s.quantity}}kg</text></view>
            <view class="text">{{single.receiveAddress}}</view>
          </block>
          <view class="name">
            <text style="color: #23E095;" wx:if="{{single.status === 1 }}">待揽收</text>
            <text style="color: #F58E56;" wx:elif="{{single.status === 2 }}">待发货</text>
            <text style="color: #0E91FF;" wx:elif="{{single.status === 3 }}">运输中</text>
            <text style="color: #0E91FF;" wx:elif="{{single.status === 4 || single.status === 5 || single.status === 8 || single.status === 9 }}">已结束</text>
          </view>

        </view>
        <view class="item">
          <view class="timeline {{single.open ? 'timeline_show' : ''}}"  wx:for="{{detailsList}}" wx:for-item="item" wx:key="timestamp">
            <view class="timeline-item weui-flex">
              <view class="timeline-item-time">{{item.timestamp}}</view>
              <view class="timeline-item-node "></view>
              <view class="timeline-item-cont">{{item.content}}</view>
            </view>
          </view>
        </view>
        <view class="show weui-flex">
          <!-- <view wx:if="{{single.status == '1'}}" style="color: #23E095;" class="weui-flex__item weui-cell__ft">待揽收</view>
          <view wx:elif="{{single.status == '2'}}" style="color: #F58E56" class="weui-flex__item weui-cell__ft">待发货</view>
          <view wx:if="{{single.status == '3'}}" class="weui-flex__item weui-cell__ft">运输中</view>
          <view wx:if="{{single.status == '1' || single.status == '2'}}" style="color: #0E91FF;" class="weui-flex__item weui-cell__ft">待发货</view>
          <view wx:if="{{single.status === 4 || single.status === 5 || single.status === 8 || single.status === 9}}" style="color: #0E91FF;" class="weui-flex__item weui-cell__ft">已结束</view> -->
          <!-- 1、2待发货，3运输中、4已结束、5已结算 -->
          <button data-entru_id="{{single.entruId}}" data-index="{{index}}" @tap="toGoodsDetails" class="weui-cell__ft btn">查看物流</button>
          <button wx:if="{{single.isSignFor == '1'}}" @tap="getSignEntruList" data-entru_id="{{single.entruId}}" class="weui-cell__ft btn">确认签收</button>
          <view wx:elif="{{single.isSignFor == '2'}}" class="weui-cell__ft">已签收</view>
        </view>
      </view>
    </view>
    <backIndex></backIndex>
    <view wx:if="{{list.length <= 0 || count <= 0 }}" class="weui-loadmore weui-loadmore_line">
      <text class="weui-loadmore__tips">暂无数据</text>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import {
  __getApi
} from "../../config.js";
import http from '../../utils/Http';

export default class goodsList extends wepy.page {
  components = {
  }
  config = {
    navigationBarTitleText: '货物信息',
  }
  data = {
    index: 0,
    token_access: '',
    list: [],
    start: 1,
    limit: 15,
    startdate: '',
    enddate: '',
    count: 0,
    orderNo: '',
    detailsList: []
  }

  methods = {
    toGoodsDetails(e) {
      let entru_id = e.currentTarget.dataset.entru_id
      this.getGoodsDetails(entru_id)
    }
  }
  onLoad(e) {
    this.token_access = this.$parent.globalData.token_access || ''
    // this.orderNo = 'XD032020060405082'
    this.orderNo = e.orderId
    this.getGoodsList()
    this.$apply()
  }
  onPullDownRefresh() {
    this.start = 1
    this.list = []
    this.getGoodsList()
  }
  async onReachBottom() {
    if (this.start * this.limit < this.count) {
      this.start += 1
      this.getGoodsList()
    }
  }
  async getGoodsList() {
    let params = {
      page_id: this.start,
      page_limit: this.limit,
      orderNo: this.orderNo,
    }
    const res = await http.get(__getApi._getGoodsList, params)
    if (res.false) return
    if (res.meta.success) {
      this.list = res.data.list
      this.count = res.data.total
      this.$apply()
    }
  }
  async getGoodsDetails(id) {
    let params = {
      entruId: id,
      token_access: this.token_access
    }
    const res = await http.get(__getApi._getOrderPositionDetails, params)
    if (res.false) return
    if (res.meta.success) {
      this.detailsList = res.data
      this.list.forEach(function(v) {
        v.open = v.open ? true : false
        v.open = (v.entruId === id) ? !v.open : false;
        console.log(v.open);
      })
      this.$apply()
    }
  }
  async getSignEntruList(e) {
    let params = {
      entruId: e.currentTarget.dataset.entru_id,
      token_access: this.token_access
    }
    const res = await http.get(__getApi._getSignEntruList, params)
    if (res.false) return
    if (res.meta.success) {
      wx.showToast({
          title: '已完成签收',
          icon: 'success',
          duration: 3000
      });
      this.getGoodsList()
    }
  }
}
</script>

<style lang="less" scoped>
.timeline {
  display: none;
  font-size: 14px;
  .timeline-item {
    display: flex;
    align-items: center;
    padding-bottom: 10px;
    .timeline-item-time {
      color: #909399;
      font-size: 13px;
    }
    .timeline-item-cont {
      flex: 1;
    }
    .timeline-item-tail {
      height: 100%;
      border-left: 2px solid #e4e7ed;
    }
    .timeline-item-node {
      margin: 0 8px;
      width: 12px;
      height: 12px;
      background-color: #e4e7ed;
      border-radius: 50%;
    }
  }
}

.timeline_show {
  display: block;
}

.red {
  color: #F52020;
  font-weight: 500;
  font-size: 16px;
}
.show {
  border-top: 1px solid #EDEDED;
  padding: 16rpx 30rpx;
  align-items: center;

}
.note {
  background: #EDEDED;
  .list {
    font-size: 14px;
    font-weight: 500;
    color: #080000;
    .single {
      margin-top: 10rpx;

      background: #ffffff;
      .item {
        padding: 10rpx 30rpx;
        .name {
          font-weight: 500;
          font-size: 16px;
        }
      }
      .btn {
        margin-left: 40rpx;
        height: 60rpx;
        line-height: 60rpx;
        border: 1px solid #0E91FF;
        color: #0E91FF;
        background: #ffffff;
        border-radius: 13px;
      }
    }
  }
}
</style>
