<template>
  <view class="note page">    
    <view class="list">
      <view class="single" wx:for="{{list}}" wx:for-item="single" wx:key="id">
        <view class="item">
          <view class="weui-flex">
            <view class="weui-flex__item">{{single.commissionNum}}</view>
            <view class="weui-cell__ft">{{single.createDate}}</view>
          </view>
          <view class="name">{{single.productName.product_name}}：<text class="red">{{single.quantity}}kg</text></view>
          <view class="text">{{single.receiveAddress}}</view>
        </view>
        <view class="show weui-flex">
          <view wx:if="{{single.status == '3'}}" style="color: #23E095;" class="weui-flex__item weui-cell__ft">运输中</view>
          <view wx:if="{{single.status == '4'}}" style="color: #F58E56" class="weui-flex__item weui-cell__ft">已结束</view>
          <view wx:if="{{single.status == '3'}}" class="weui-flex__item weui-cell__ft">已结算</view>
          <view wx:if="{{single.status == '1' || single.status == '2'}}" style="color: #0E91FF;" class="weui-flex__item weui-cell__ft">待发货</view>
          <!-- 1、2待发货，3运输中、4已结束、5已结算 -->
          <button data-entru_id="{{single.entruId}}" data-index="{{index}}" @tap="toGoodsDetails" class="weui-cell__ft btn">查看物流</button>
        </view>
      </view>
    </view>
    <backIndex></backIndex>
    <view wx:if="{{list.length <= 0 || count <= 0 }}" class="weui-loadmore weui-loadmore_line">
      <text class="weui-loadmore__tips">暂无数据</text>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'
import backIndex from '../../components/backIndex'
import {
  __getApi
} from "../../config.js";
import http from '../../utils/Http';

export default class goodsList extends wepy.page {
  components = {
    backIndex,
  }
  config = {
    navigationBarTitleText: '货物信息',
  }
  data = {
    index: 0,
    token_access: '',
    list: [],
    start: 1,
    limit: 15,
    startdate: '',
    enddate: '',
    count: 0,
    orderNo: ''
  }

  methods = {
    toGoodsDetails(e) {
      let entru_id = e.currentTarget.dataset.entru_id
      let index = e.currentTarget.dataset.index
      let commission_num = this.list[index].commissionNum
      let product_name = this.list[index].productName.product_name
      let quantity = this.list[index].quantity
      wx.navigateTo({
        url: `./goods-details?entru_id=${entru_id}&commission_num=${commission_num}&product_name=${product_name}&quantity=${quantity}`
      })
    },
  }
  onLoad(e) {
    this.token_access = this.$parent.globalData.token_access || ''
    // this.orderNo = '2019.04.151050'
    this.orderNo = e.orderId
    this.getGoodsList()
    this.$apply()
  }
  onPullDownRefresh() {
    this.start = 1
    this.list = []
    this.getGoodsList()
  }
  async onReachBottom() {
    if (this.start * this.limit < this.count) {
      this.start += 1
      this.getGoodsList()
    }
  }
  async getGoodsList() {
    let params = {
      page_id: this.start,
      page_limit: this.limit,
      orderNo: this.orderNo,
      token_access: this.token_access
    }
    const res = await http.get(__getApi._getGoodsList, params)
    if (res.false) return
    if (res.meta.success) {
      this.list = res.data.list
      this.count = res.data.total
      this.$apply()
    }
  }
}
</script>

<style lang="less" scoped>
.red {
  color: #F52020;
  font-weight: 500;
  font-size: 16px;
}
.show {
  border-top: 1px solid #EDEDED;
  padding: 16rpx 30rpx;
  align-items: center;
  
}
.note {
  background: #EDEDED;
  .list {
    font-size: 14px;
    font-weight: 500;
    color: #080000;
    .single {
      margin-top: 10rpx;
      
      background: #ffffff;
      .item {
        padding: 10rpx 30rpx;
        .name {
          font-weight: 500;
          font-size: 16px;
        }
      }
      .btn {
        margin-left: 40rpx;
        height: 60rpx;
        line-height: 60rpx;
        border: 1px solid #0E91FF;
        color: #0E91FF;
        background: #ffffff;
        border-radius: 13px;
      }
    }
  }
}
</style>
