<template>
<form bindsubmit="formSubmit" bindreset="formReset">
  <view class="weui-toptips weui-toptips_warn" wx:if="{{tipsFlag}}">{{tipsMessage}}</view>
  <view class="weui-cells weui-cells_after-title"></view>
  <view class="weui-cells weui-cells_after-title">
    <view class="weui-cell weui-cell_select">
      <view class="weui-cell__hd weui-cell__hd_in-select-after">
        <view class="weui-label">来源</view>
      </view>
      <view class="weui-cell__bd">
        <picker bindchange="bindSrouceChange" value="{{fishortradeType}}" range="{{sourceList}}">
          <view class="weui-select weui-select_in-select-after">{{sourceList[fishortradeType]}}</view>
        </picker>
      </view>
    </view>
    <view class="weui-cell">
      <view class="weui-cell__hd weui-cell__hd_in-select-after">
        <view class="weui-label">类型</view>
      </view>
      <block wx:if="{{fishortradeType == 1}}">
        <view class="weui-cell__bd">
          <picker bindchange="bindTypeChange" value="{{customMadeType}}" range="{{typeList}}">
            <view class="weui-select weui-select_in-select-after">{{typeList[customMadeType]}}</view>
          </picker>
        </view>
        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
      </block>
      <block wx:else>
        <view class="weui-cell__bd">{{typeList[0]}}</view>
      </block>
    </view>
    <view class="weui-cell weui-cell_select">
      <view class="weui-cell__hd weui-cell__hd_in-select-after">
        <view class="weui-label">品种</view>
      </view>
      <view class="weui-cell__bd">
        <picker bindchange="bindVarietyChange" value="{{varietyIndex}}" range="{{varietyList}}" range-key="{{'descrip'}}">
          <view class="weui-select weui-select_in-select-after">{{varietyList[varietyIndex].descrip}}</view>
        </picker>
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd weui-cell__hd_in-select-after">
        <view class="weui-label">
            <view class="red-box">品名</view>
        </view>
      </view>
      <view class="weui-cell__bd">
          <input class="weui-input" name="productName" value="{{productName}}" placeholder="请输入品名" />
      </view>
      <view class="weui-cell__ft weui-cell__ft_in-access"></view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">
            <view class="red-box">牌号</view>
        </view>
      </view>
      <!-- <block wx:if="{{varietyList.id===2 || varietyList.id===6}}"> -->
      <!-- <view class="weui-cell__ft font-red">*</view> -->
      <!-- </block> -->
      <view class="weui-cell__bd">
        <input class="weui-input" name="grade" value="{{grade}}" placeholder="请输入牌号" />
      </view>
    </view>
    <view class="weui-cell weui-cell_input">
      <view class="weui-cell__hd">
        <view class="weui-label">厂商</view>
      </view>
      <view class="weui-cell__bd">
        <input class="weui-input" name="grades" value="{{grades}}" placeholder="请输入厂商" />
      </view>
    </view>
    <view class="weui-cell weui-cell_switch">
      <view class="weui-cell__bd">是否接受手机订阅</view>
      <view class="weui-cell__ft">
        <switch checked="{{made_type===1 ? true : false}}" bindchange="switchChange"></switch>
      </view>
    </view>
  </view>
  <view class="weui-cells__title">备注</view>
  <view class="weui-cells weui-cells_after-title">
    <view class="weui-cell">
      <view class="weui-cell__bd">
        <textarea class="weui-textarea" name="describe" value="{{describe}}" placeholder="请输入描述" style="height: 3.3em" />
      </view>
    </view>
  </view>
  <view class="weui-btn-area weui-flex bg__white">
    <button class="weui-flex__item" type="default" formType="reset">重置</button>
    <button class="weui-flex__item" type="primary" formType="submit">确定</button>
  </view>
</form>
</template>
<script>
import wepy from 'wepy'
import {
  __getApi
} from '../../config.js'
import base from '../../mixins/base'
import user from '../../mixins/user'
import http from '../../utils/Http'

export default class NewCustomizeInfo extends wepy.page {
  mixins = [base, user]
  config = {
    navigationBarTitleText: '发布我的鱼网'
  }
  data = {
    id: '',
    token_access: '',
    tipsFlag: false,
    sourceList: ['实盘挂牌', '供求信息'],
    fishortradeType: 0,
    typeList: ['供应', '求购'],
    customMadeType: 0,
    varietyList: [],
    varietyIndex: 0,
    varietyID: null,
    variety: 1,
    made_type: 1,
    chooseProduct: {
      name: '',
      id: ''
    },
    tipsMessage: '',
    productName:'',
    grade: '',
    grades: '',
    describe: ''
  }
  async getVarietyList() {
    const res = await http.get(__getApi._getVarietyList, {
      service_name: 'TRADE_GOODSCLASSLIST'
    }, true)
    if (res.false) return
    this.varietyList = res.data
    this.$apply()
  }
  getVarietyName() {
    let varietyList = this.varietyList
    if (this.varietyID) {
      for (var i = 0; i < varietyList.length; i++) {
        if (varietyList[i].id === this.varietyID) {
          this.varietyIndex = i
        }
      }
    }
  }
  async getMyInfroDetails() {
    const res = await http.get(__getApi._getCustomMadeInfoDetaile, {
      token_access: this.token_access,
      id: this.id
    })
    if (res.false) return
    this.typeIndex = res.data.type
    this.fishortradeType = res.data.fishortradeType
    this.customMadeType = res.data.customMadeType
    this.productName = res.data.productName
    this.grade = res.data.grade ? res.data.grade : this.grade
    this.grades = res.data.grades ? res.data.grades : this.grades
    this.describe = res.data.defineMade ? res.data.defineMade : this.defineMade
    this.made_type = res.data.made_type
    this.varietyID = res.data.variety
    this.getVarietyName()
    this.$apply()
  }
  showTopTips() {
    this.tipsFlag = true
    setTimeout(() => {
      this.tipsFlag = false
      this.$apply()
    }, 3000)
  }
  async getProductList(param) {
    wx.showLoading({
      title: '上传中...'
    })
    const res = await http.post(__getApi._getCustomMadeInfo, param)

    wx.hideLoading()
    if (res.false) return
    wx.showToast({
      title: '上传成功',
      icon: 'success',
      duration: 1000
    })
    setTimeout(function() {
      wx.redirectTo({
        url: '/pages/customize/list'
      })
    }, 1000)
  }
  async getMyInfroUpdata(param) {
    wx.showLoading({
      title: '上传中...'
    })
    const res = await http.post(__getApi._updateCustomMadeInfo, Object.assign(this.getObject(param), {
      id: this.id
    }))

    wx.hideLoading()
    if (res.false) return
    wx.showToast({
      title: '上传成功',
      icon: 'success',
      duration: 1000
    })
    setTimeout(function() {
      wx.redirectTo({
        url: '/pages/customize/list'
      })
    }, 1000)
  }
  methods = {

    bindVarietyChange(e) {
      this.varietyIndex = e.detail.value
      this.variety = this.varietyList[e.detail.value].id
      this.productName = ''
      this.$apply()
    },
    bindSrouceChange(e) {
      this.fishortradeType = e.detail.value
      this.customMadeType = 1
      this.$apply()
    },
    bindTypeChange(e) {
      this.customMadeType = e.detail.value
    },
    switchChange(e) {
      this.made_type = e.detail.value ? 1 : 0
    },
    formReset(e) {},
    formSubmit(e) {
      if (!this.required(e.detail.value.productName)) {
        this.tipsMessage = '请输入品名项'
        this.showTopTips()
        return
      }
      const param = {
        token_access: this.token_access,
        fishortradeType: this.fishortradeType,
        customMadeType: this.customMadeType,
        made_type: this.made_type,
        variety: this.variety,
        productName: this.productName,
        grade: e.detail.value.grade ? e.detail.value.grade : '',
        grades: e.detail.value.grades ? e.detail.value.grades : '',
        defineMade: e.detail.value.describe ? e.detail.value.describe : ''
      }
      if (this.id) {
        this.getMyInfroUpdata(param)
      } else {
        this.getProductList(param)
      }
    }
  }

  async onLoad(options) {
    await this.getVarietyList()
    this.token_access = this.$parent.globalData.token_access
    if (options.id) {
      this.id = options.id
      await this.getMyInfroDetails()
    }
  }
  onShow() {
    // const pages = getCurrentPages()
    // const currPage = pages[pages.length - 1] /* 当前页面 */
    //
    // this.chooseProduct.id = currPage.data.chooseProduct.id
    // this.chooseProduct.name = currPage.data.chooseProduct.name
    // this.$apply()
  }
}
</script>

<style lang="less">
.icon {
    width: 40rpx;
    height: 40rpx;
    margin-right: 10rpx;
}
.weui-input {
    width: 100%;
    border: 0;
    outline: 0;
    -webkit-appearance: none;
    background-color: transparent;
    font-size: inherit;
    color: inherit;
    height: 1.47058824em;
    line-height: 1.47058824;
}
.weui-label {
    width: 160rpx;
    word-wrap: break-word;
    word-break: break-all;
}
.weui-textarea-counter {
    color: #B2B2B2;
    text-align: right;
}
.weui-cell_select .weui-cell__bd:after {
    content: " ";
    display: inline-block;
    height: 6px;
    width: 6px;
    border-width: 2px 2px 0 0;
    border-color: #C8C8CD;
    border-style: solid;
    -webkit-transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
    transform: matrix(0.71, 0.71, -0.71, 0.71, 0, 0);
    position: relative;
    top: -2px;
    position: absolute;
    top: 50%;
    right: 15px;
    margin-top: -4px;
}
.weui-btn-area {
    margin-top: 20rpx;
}
button {
    border-radius: 0;
}
.weui-toptips {
    position: fixed;
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
    top: 0;
    left: 0;
    right: 0;
    padding: 5px;
    font-size: 14px;
    text-align: center;
    color: #FFF;
    z-index: 5000;
    word-wrap: break-word;
    word-break: break-all;
}
.weui-toptips_warn {
    background-color: #E64340;
}
.weui-uploader__file {
    position: relative;
}
.weui-uploader__file,
.weui-uploader__input-box {
    margin-top: 18rpx;
    margin-bottom: 10rpx;
}
.icon-delete {
    width: 40rpx;
    height: 40rpx;
    position: absolute;
    top: -10rpx;
    right: -10rpx;
    z-index: 2;
}

.red-box {
    width: 110rpx;
    color: #EB4E35;
    background: rgba(235,78,53,0.15);
    border: 1px solid rgba(235,78,53,0.65);
    border-radius: 2px;
    text-align: center;
    font-size: 28rpx;
}
</style>
